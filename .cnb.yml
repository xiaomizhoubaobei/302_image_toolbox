# .cnb.yml
$:
  vscode:
    - runner:
        cpus: 64
      services:
        - vscode
        - docker
      docker:
        image: docker.cnb.cool/xmzzuzhi/cnb-docker/node:latest
      env:
        - ANTHROPIC_BASE_URL=https://ai.gitee.com/anthropic
        - ANTHROPIC_AUTH_TOKEN
        - ANTHROPIC_MODEL=kimi-k2-instruct
        - ANTHROPIC_SMALL_FAST_MODEL=kimi-k2-instruct
      imports:
        - https://cnb.cool/XMZZUZHI/key/-/blob/main/CLI.yml
      stages:
        - name: 更换NPM源
          script:
            npm config set registry https://repo.huaweicloud.com/repository/npm/
        - name: 赋予GPG脚本权限
          script:
            chmod +x /workspace/install_gpg_keys.sh
        - name: 安装 iFlow CLI
          script:
            npm i -g @iflow-ai/iflow-cli@latest
        - name: 安装 Codebuddy Code CLI
          script:
            npm install -g @tencent-ai/codebuddy-code 
        - name: 安装 Claude Code
          script:
            npm install -g @anthropic-ai/claude-code
  
main:
  push:
    - runner:
        tags: cnb:arch:amd64
      services:
        - docker
      env:
        IMAGE_TAG: ${CNB_DOCKER_REGISTRY}/${CNB_REPO_SLUG_LOWERCASE}:latest-linux-amd64
      stages:
        - name: docker login
          script: docker login -u ${CNB_TOKEN_USER_NAME} -p "${CNB_TOKEN}" ${CNB_DOCKER_REGISTRY}
        - name: docker build
          script: docker build -t ${IMAGE_TAG} .
        - name: docker push
          script: docker push ${IMAGE_TAG}
        - name: resolve
          type: cnb:resolve
          options:
            key: build-amd64 
          
    - runner:
        tags: cnb:arch:arm64:v8
      services:
        - docker
      env:
        IMAGE_TAG: ${CNB_DOCKER_REGISTRY}/${CNB_REPO_SLUG_LOWERCASE}:latest-linux-arm64
      stages:
        - name: docker login
          script: docker login -u ${CNB_TOKEN_USER_NAME} -p "${CNB_TOKEN}" ${CNB_DOCKER_REGISTRY}
        - name: docker build
          script: docker build -t ${IMAGE_TAG} .
        - name: docker push
          script: docker push ${IMAGE_TAG}
        - name: resolve
          type: cnb:resolve
          options:
            key: build-arm64

    - services:
        - docker
      env:
        IMAGE_TAG: ${CNB_DOCKER_REGISTRY}/${CNB_REPO_SLUG_LOWERCASE}:latest
      stages:
        - name: await the amd64
          type: cnb:await
          options:
            key: build-amd64
        - name: await the arm64
          type: cnb:await
          options:
            key: build-arm64
        - name: manifest
          image: cnbcool/manifest
          settings:
            target: ${IMAGE_TAG}
            template: ${IMAGE_TAG}-OS-ARCH
            platforms:
              - linux/amd64
              - linux/arm64
        - name: remove tag
          type: artifact:remove-tag
          options:
            name: ${CNB_REPO_NAME}
            tags:
              - latest-linux-amd64
              - latest-linux-arm64
            type: docker
